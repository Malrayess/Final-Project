[{"code":"<body></body>\n<script src=\"/three.js\"></script>\n<script>\n  // The \"scene\" is where stuff in our game will happen:\n  var scene = new THREE.Scene();\n  var flat = {flatShading: true};\n  var light = new THREE.AmbientLight('white', 0.8);\n  scene.add(light);\n\n  // The \"camera\" is what sees the stuff:\n  var aspectRatio = window.innerWidth / window.innerHeight;\n  var camera = new THREE.PerspectiveCamera(75, aspectRatio, 1, 10000);\n  camera.position.z = 500;\n\n  // The \"renderer\" draws what the camera sees onto the screen:\n  var renderer = new THREE.WebGLRenderer({antialias: true});\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  var marker = new THREE.Object3D();\n  scene.add(marker);\n  // ******** START CODING ON THE NEXT LINE ********\n  var body = new THREE.SphereGeometry(100);\n  var cover = new THREE.MeshNormalMaterial(flat);\n  var avatar = new THREE.Mesh(body, cover);\n  marker.add(avatar);\n\n  var hand = new THREE.SphereGeometry(50);\n  \n  var rightHand = new THREE.Mesh(hand, cover);\n  rightHand.position.set(-150, 0, 0);\n  avatar.add(rightHand);\n\n  var leftHand = new THREE.Mesh(hand, cover);\n  leftHand.position.set(150, 0, 0);\n  avatar.add(leftHand);\n  \n  var foot = new THREE.SphereGeometry(50);\n  \n  var rightFoot = new THREE.Mesh(foot, cover);\n  rightFoot.position.set(-75, -125, 0);\n  avatar.add(rightFoot);\n  \n  var leftFoot = new THREE.Mesh(foot, cover);\n  leftFoot.position.set(75, -125, 0);\n  avatar.add(leftFoot);\n  \n  marker.add(camera);\n  \n  function makeTreeAt(x, z) {\n    var trunk = new THREE.Mesh(\n      new THREE.CylinderGeometry(50, 50, 200),\n      new THREE.MeshBasicMaterial({color: 'sienna'})\n      );\n      var top = new THREE.Mesh(\n        new THREE.SphereGeometry(150),\n        new THREE.MeshBasicMaterial({color: 'forestgreen'})\n        );\n        top.position.y = 175;\n        trunk.add(top);\n        \n        trunk.position.set(x, -75, z);\n        scene.add(trunk);\n  }\n  \n  makeTreeAt(500, 0);\n  makeTreeAt(-500, 0);\n  makeTreeAt(750, -1000);\n  makeTreeAt(-750, -1000);\n  \n  // Now, animate what the camera sees on the screen:\n  var clock = new THREE.Clock();\n  var isCartwheeling = false;\n  var isFlipping = false;\n  var isMovingRight = false;\n  var isMovingLeft = false;\n  var isMovingForward = false;\n  var isMovingBack = false;\n  \n   function animate() {\n  requestAnimationFrame(animate);\n  walk();\n  acrobatics();\n  renderer.render(scene, camera);\n  }\n  animate();\n    \n    function walk() {\n    if (!isWalking()) return;\n      \n    var speed = 10;\n    var size = 100;\n    var time = clock.getElapsedTime();\n    var position = Math.sin(speed * time) * size;\n    rightHand.position.z = position;\n    leftHand.position.z = -position;\n    rightFoot.position.z = -position;\n    leftFoot.position.z = position;\n  }\n  \n  function isWalking() {\n    if (isMovingRight) return true;\n    if (isMovingLeft) return true;\n    if (isMovingForward) return true;\n    if (isMovingBack) return true;\n    return false;\n  }\n    \n    function acrobatics() {\n      if (isCartwheeling) {\n      avatar.rotation.z = avatar.rotation.z + 0.05;\n    }\n    if (isFlipping) {\n      avatar.rotation.x = avatar.rotation.x + 0.05;\n    }\n  }\n  \n  \n  \n  //Listen for keypress events\n  document.addEventListener('keydown', function(event) {\n    var code = event.code;\n    if (code == 'ArrowLeft') {\n      marker.position.x = marker.position.x - 5;\n      isMovingLeft = true;\n    }\n    if (code == 'ArrowRight') {\n      marker.position.x = marker.position.x + 5;\n      isMovingRight = true;\n    }\n    if (code == 'ArrowUp') {\n      marker.position.z = marker.position.z - 5;\n      isMovingForward = true;\n    }\n    if (code == 'ArrowDown') {\n      marker.position.z = marker.position.z + 5;\n      isMovingBack = true;\n    }\n    \n    if (code == 'KeyC') isCartwheeling = !isCartwheeling;\n    if (code == 'KeyF') isFlipping = !isFlipping;\n  }); \n  \n  document.addEventListener('keyup', function(event) {\n   var code = event.code;\n   if (code == 'ArrowLeft') isMovingLeft = false;\n   if (code == 'ArrowRight') isMovingRight = false;\n   if (code == 'ArrowUp') isMovingForward = false;\n   if (code == 'ArrowDown') isMovingBack = false;\n  });\n  \n</script>","lineNumber":152,"filename":"Shapes","updated_at":"2018-01-24 19:58:12.540","created_at":"2017-12-23 14:11:41.524"},{"code":"<body></body>\n<script src=\"/three.js\"></script>\n<script src=\"/controls/OrbitControls.js\"></script>\n<script>\n                                                      // (1) TRY clicking the HIDE CODE button! -->\n\n  // The \"scene\" is where stuff in our game will happen:\n  var scene = new THREE.Scene();\n\n  // The \"camera\" is what sees the stuff:\n  var aspect_ratio = window.innerWidth / window.innerHeight;\n  var camera = new THREE.PerspectiveCamera(75, aspect_ratio, 1, 10000);\n  camera.position.z = 500;\n  scene.add(camera);\n\n  var light = new THREE.HemisphereLight('white', 'grey', 0.5);\n  scene.add( light );\n\n  // The \"renderer\" draws what the camera sees onto the screen:\n  var renderer = new THREE.WebGLRenderer({antialias: true});\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  var orbit = new THREE.OrbitControls( camera, renderer.domElement );\n\torbit.enableZoom = false;\n\n  /****** (2) PLAY with the numbers!! ******/\n  var geometry = new THREE.IcosahedronGeometry(200, 1);\n\n  var material = new THREE.MeshPhongMaterial({\n\n    /*** (3) Try other COLORS like lime, magenta, or blue!! ***/\n    color: 'goldenrod',\n\n    shininess: 20,\n    specular: 'lightgrey',\n    side: THREE.DoubleSide,\n\t\tflatShading: true\n  });\n\n  var mesh = new THREE.Object3D();\n\tmesh.add(new THREE.Mesh(geometry,  material));\n  scene.add(mesh);\n\n  animate();\n  function animate() {\n    requestAnimationFrame(animate);\n    var t = Date.now() * 0.0001;\n\n    /*** (4) PLAY with the numbers!! ***/\n    mesh.rotation.x = 2*t;\n    mesh.rotation.y = 5*t;\n\n    renderer.render(scene, camera);\n  }\n\n  // Light up the scene\n  var light = new THREE.PointLight('white', 0.75);\n  light.position.set(400, 400, 600);\n  scene.add( light );\n\n  // Highlight the lines in the shape\n\tmesh.add(\n\t  new THREE.LineSegments(\n\t\t  geometry,\n\t\t  new THREE.LineBasicMaterial({\n\t\t\t  color: 'white',\n\t\t\t  transparent: true,\n\t\t\t  opacity: 0.5\n\t\t  })\n\t  )\n\t);\n</script>","lineNumber":1,"filename":"Untitled","updated_at":"2017-12-23 14:12:34.796","created_at":"2017-12-23 14:05:29.565"}]